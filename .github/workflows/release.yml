name: Release Build

on:
  schedule:
    - cron: 0 20 * * 0
  push:
    branches:
      - master
    paths:
      - '.github/start_release'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install perl
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          perl --version

      - name: Set env variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Clone MaxMind-DB-Writer-perl
        env:
          REPO_URL: https://github.com/maxmind/MaxMind-DB-Writer-perl
        run: git clone $REPO_URL writer

      - name: Clone mmdb_china_ip_list
        env:
          REPO_URL: https://github.com/alecthw/mmdb_china_ip_list
          REPO_BRANCH: master
        run: git clone -b $REPO_BRANCH $REPO_URL

      - name: Install perl deps
        continue-on-error: true
        run: |
          cd writer
          curl -LR http://cpanmin.us -o cpanm
          sudo -E perl cpanm â€“installdeps .

      - name: Build MaxMind-DB-Writer-perl
        run: |
          cd writer
          sudo -E ./Build manifest
          sudo -E perl Build.PL
          sudo -E ./Build install

      - name: Download GeoLite2-Country-CSV
        env:
          LICENSE_KEY: ${{ secrets.MAXMIND_GEOLITE2_LICENSE }}
        run: |
          cd mmdb_china_ip_list
          curl -LR "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o GeoLite2-Country-CSV.zip
          unzip GeoLite2-Country-CSV.zip
          rm -f GeoLite2-Country-CSV.zip
          mv GeoLite2-Country-CSV_* mindmax

      - name: Download china_ip_list
        run: |
          cd mmdb_china_ip_list
          curl -LR -o china_ip_list.txt "https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt"

      - name: Download chunzhen cn list
        run: |
          cd mmdb_china_ip_list
          curl -LR -o CN.txt "https://raw.githubusercontent.com/metowolf/iplist/master/data/special/china.txt"

      - name: Build mmdb
        run: |
          cd mmdb_china_ip_list
          perl china_ip_list.pl

      - name: Generate version file
        run: |
          cd mmdb_china_ip_list
          echo ${{ env.TAG_NAME }} > version

      - name: Release and upload
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            ./mmdb_china_ip_list/version
            ./mmdb_china_ip_list/china_ip_list.mmdb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare upload to server
        run: |
          mkdir -p publish/lite
          cp -af mmdb_china_ip_list/version publish/version
          cp -af mmdb_china_ip_list/china_ip_list.mmdb publish/Country.mmdb

      - name: Upload to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          source: "publish/Country.mmdb,publish/version"
          target: "/www/mmdb"
          rm: true
          strip_components: 1
